<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="notifyIcon1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="notifyIcon1.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAGACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACRkZKQj5GPj5COjo+NjY6MjI2Li4yKiYqIiImHiIiGhoeFhYaEhIWDg4OCgoOBgYF/gIF+f39+fn59
        fH17e3t6enp6eXp4eHl3d3d2dnZ1dXV0dHR0dHN0c3Rzc3Nzc3SSkpORkZKQkJGPj5COjpCNjY6MjI2L
        i4yJiYuIiYmHiIiGhoeFhYaEhIWDg4SCgoKBgYKAgIB/f39+fn58fX18fHt7e3p6eXl4eHl4d3d2dnZ1
        dXVzdHR0dHR0c3R0dHSTk5WSkpSRkZKQkJGPj5COjo+NjY6LjI2LiouJiYqIiImHh4iGhoeFhoaFhYWD
        g4SCgoOBgYGAgIB/f4B9fn59fX18fHx6e3t5eXl4eHl3d3h2dnZ2dXV0dHR0dHRzdHSUlJaTlJWSk5OR
        kZKRkJGQj5GOjo+NjY6Mi42Li4yKiYuJiYmHiIiGh4iFhYeEhYWEg4SCgoOBgYGAgIF/f4B+fn99fX18
        e3x6ent6enp4eHl3eHh3dnd1dXV0dHV0dHSVlpiUlZaUlJWTkpSRkZOQkJGQj5COjo+NjY6MjI2Li4yK
        iouJiYmHiIiHhoiFhoeEhYWDg4SCgoOBgYKAgIF/f4B+fn99fX18fHx7e3x5eXp4eHl4d3h2dnd1dXV0
        dHSWl5mWlpeVlJaUk5WTk5SSkZOQkJKPj5GOj5CNjY6MjI6Li4yKiouIiYqIh4mGhoeGhoaFhIWEg4SC
        goOBgYKAgIF/f39/fn59fX18e3x7e3x6eXp5eXl4eHh3dnd1dXaYmJmXl5mWlpiVlZaUlJWTk5SRkZOR
        kZKQj5GOjo+NjY+MjI2Li4yKiouJiYqIiImHhoiFhoaFhIaEhIWDgoOCgoKBgYCAf4B+f399fX58fH17
        e3t5enp5eXl3eHh3d3aZmZqZmJqXl5mWlpeUlJZ4enxPU1ZCRklJTlFucnWMjY6Njo+MjI2Li42KiouJ
        iYqIiImHhoiGhoeEhYaEg4SDgoSCgYKBgIGAgIB+fn9+fn18fHx7e3x6ent5eXl4eHibmp2amZuZmJqX
        mJpmbXE0ODotLzIYGhsWGRkxNDVNUVWCg4WOjY6MjY2MjI2KiouJiYqIiImHh4iGhoeFhYaEhIWCg4SB
        gYKAgIGAgIB/f39+fn58fX18fHx6enp5eXmcnJ2bmp2amZt7gYUqLi8OEA8XGhoNERAJDAwQERIeISJF
        SkyLi4yNjo6MjI2LjIyKiouJioqJiImHh4iGhoaFhYaEhIWDg4SCgoN4eXt5e32AgIF9fX18fX17e3t6
        enqdnZ+cm56doKNVXF8UFhcWGhoZHR0YGxsWGhoRFBMGCAcYHBxzdXaPj5CNjo+MjI6Mi42KiouJiYuI
        iYmHiIiGhoeFhYaEhIVzdnhTWFtPU1dUWlxrb3F+f398fH17fHyenqCdnZ+Um6BES00aHR4bHR0aHBwY
        GxoYGxoZHBwPEBAHCQlWWVqQkJGOj5COjo+NjY6Mi42KiouJiYuJiYqHh4iHhodzdnc8QkM7PEA5PEAo
        KywlKChNU1V6fH58fH2gn6GeoKOJkpg8QkUREhMGBwYPEQ8YGBgaHBwdHh4WGRcLDQxOUVKSkZKQkJKP
        j5COjo+NjI6MjI2Li4yKiYqIiIqEhodITlAUFhUVFxYfISAFBwYUFxcfICBJT1J/foGgoKKio6eDj5ZC
        SU0kJygEBQQEBAIFBgMKCwkVFRQUFhUWGRhdYGGSk5SRkZORkJGPj5COjpCMjY6LjI2KioyIiYtydnox
        NTYYGhkhJCMhJSUaHx0KDgwNDw8SFRRobXCioaShpquNmKFYYWc5Pj8lKCgHBwYDAwEDBAEBAgAKCwos
        MDB+f4GTlJWSkpOQkJKRkZGQj5GOjpCNjY+MjI2Bg4dCSEwuMjMfICAfISEeIB8fIiIdIiEJCwoJDAxE
        SUuio6aapa2RnKRueH5TWmBITlA6Pj4hIyMWGRgcHx08QUFiZ2mRkpOVlZeTk5SSkpSQkJJYWltXW1t4
        eXuNjY5UWl0gJSUrLi4gICEkJCMjJSMjJSQjJycTFhQQExI9QkObo6mOmKCFkZmCj5dtd31TWl5RWFtS
        WFpYX2Jud3tyfYN8gISXl5mVlpiUlZeUlJVCRUUbIB8ZHR0WGxoqLy8dIyMoLi0wNDQZGRgMDQoVFRIZ
        GBQfHxwWGBYQEhJVWVyRnKR6ho9+ipN7h49/i5N/ipFye4B0foR8hotga3EuNjclKysmLS4rMjJARkU8
        P0AdISEaHx4WGhoVGhkUGRgaHx49REZGTVA6Pj8VFRMLCwgICQYPEA4NDwwyNjZ5e32NmaRnc3t1gYl6
        ho1+i5KGkJeOmaCEjpVKUVUeJSQlKywaHx8MEA8fIyInLSwcISAeIyIcIiEYHRwVGhoUGRgpLy9SW19S
        W19PVlhDSEoqLSwfISAhIyJBREV1eXyFhYeRnqlnc3pjbnRueYB4g4t0f4VkbXI0Oz0YHh0lKyorMDAc
        IiEgJCInKyo5Pj4fIyMbIB8aHx4RFhUNEREUGhg7QkRibHJrdXpfaGxVXF9ZYGRiaW14f4SMkpaOj5GG
        hoebo6t9iJFoc3pcZWlXXWFFSkwvNDUnKytFS0ttd3xPWV1OVllHTlA4Pj5ARkc4Pj0qLi4aHh0QExMO
        EhEZHRxAR0hmcHZ6hYuGkZeIkZiGkJeTm6KPkpWMjI6IiYmHh4ioqKyOmKF8iJFzfoVpcndZYWRNVFZv
        d3ubpq4gJyohJidLUlRNVFcjKSpZY2hMVVhVXmFRWVsuMjISFhUrLy9BR0lueH+AjJKNl52dpq2kqrCQ
        kZKMjI2Li4uJioqJiImrq62mqKyIlJx8iJF4hIt1gId8hYykrreAjJUuNDU7QEJgaW1ncHV1f4NCSk0S
        FhVWYGNnc3hXYGM2OzsrMDBBR0heaGuJkpmdp66doaaPj5COjo+NjY6LjI2KiouJiYusrK+rq62lqKuM
        lZyDjZSHkZmXn6edo6iAhYpnbnNXYWZgaW5ud31ncndPWFtdZ2tpdntmcndga3BZYWVUW11fZ2pnb3SH
        kJWXm5+SkZKQkJKPjpCOjY+NjI6LjI2Li4utrrCsrK+sq62oqayio6ekpamlpqqmpqikpaegoqSFiIqG
        iYuQkZR6goZhbHFlcXdfa3BeaG5ha3B9h42IkpiOlZyVmZyYmZqTk5WSk5SRkZOQkJGPj5GOjpCNjY6L
        jI2urrGurbCsrK+rrK6qqq2pqqyoqKqnp6mmpqmlpKeko6WioaSioaSgn6Gam56VmJuSlpp5goiMlZug
        p62bnZ+Yl5qWl5mWlZiUlJaUlJWSkpSRkZORkJKPkJGOjo+NjY6vr7Kur7GtrrCsra+sq66rqqypqauo
        qKunp6qmpqilpaejo6aio6WioqSgoKKgn6GfnqGdnZ+cnJ6bnJ2ampyZmZuYmJqXl5iWlZiUlZaUk5WS
        k5SSkZOQkZKPj5COjpCwsLOwsLOvr7GurrCtrK+rq66qq62qqayoqKuop6qmpqilpaekpKajo6WhoqSh
        oaOfoKKfnqCenaCdnJ+bm52ampyZmZuYmJqXl5iWlpiVlJeUlJWTkpSRkpOQkJKPkJCxsLOwsLOvsLOu
        r7GtrbCsrLCsq66qq62qqayoqKuop6mmpqilpaekpKajo6WioqSgoaKgn6Kfn6CenaCdnJ6bm52ampyZ
        mZuYmJmXl5iWlpeVlZaUk5WTk5SRkpOQkJKwsLOwsLOxsLOwsLOvr7KurbCtrbCsq6+rq66qqaypqauo
        p6qnp6ilpaekpKajo6WioqShoaOgoKKfn6Genp+dnJ+bm52bm52ZmZuYmJqXl5mWlpiVlZaUlJWSk5WS
        kpOwsbOxsLOwsLOxsLOwsLOvr7GurrGsra+rrK6rq62pqqypqKunp6qmpqilpaikpKajo6WioqShoKOg
        oKKenqGdnqCdnZ+bm56bm5yamZuYmZqYl5mWlpeVlZeUlJWTk5WwsLOwsLOwsbOxsLOwsLOwsLOvr7Ku
        rrGtra+sq66rq62pqa2oqaunp6qmpqmlpaikpKajpKWioqShoaOgoKKfn6GenqCdnZ+cnJ6am52ZmZuY
        mJqXl5mWl5iVlZeUlZUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAGACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACRkZKQj5GPj5COjo+NjY6MjI2Li4yKiYqIiImHiIiGhoeFhYaEhIWDg4OCgoOBgYF/gIF+f39+fn59
        fH17e3t6enp6eXp4eHl3d3d2dnZ1dXV0dHR0dHN0c3Rzc3Nzc3SSkpORkZKQkJGPj5COjpCNjY6MjI2L
        i4yJiYuIiYmHiIiGhoeFhYaEhIWDg4SCgoKBgYKAgIB/f39+fn58fX18fHt7e3p6eXl4eHl4d3d2dnZ1
        dXVzdHR0dHR0c3R0dHSTk5WSkpSRkZKQkJGPj5COjo+NjY6LjI2LiouJiYqIiImHh4iGhoeFhoaFhYWD
        g4SCgoOBgYGAgIB/f4B9fn59fX18fHx6e3t5eXl4eHl3d3h2dnZ2dXV0dHR0dHRzdHSUlJaTlJWSk5OR
        kZKRkJGQj5GOjo+NjY6Mi42Li4yKiYuJiYmHiIiGh4iFhYeEhYWEg4SCgoOBgYGAgIF/f4B+fn99fX18
        e3x6ent6enp4eHl3eHh3dnd1dXV0dHV0dHSVlpiUlZaUlJWTkpSRkZOQkJGQj5COjo+NjY6MjI2Li4yK
        iouJiYmHiIiHhoiFhoeEhYWDg4SCgoOBgYKAgIF/f4B+fn99fX18fHx7e3x5eXp4eHl4d3h2dnd1dXV0
        dHSWl5mWlpeVlJaUk5WTk5SSkZOQkJKPj5GOj5CNjY6MjI6Li4yKiouIiYqIh4mGhoeGhoaFhIWEg4SC
        goOBgYKAgIF/f39/fn59fX18e3x7e3x6eXp5eXl4eHh3dnd1dXaYmJmXl5mWlpiVlZaUlJWTk5SRkZOR
        kZKQj5GOjo+NjY+MjI2Li4yKiouJiYqIiImHhoiFhoaFhIaEhIWDgoOCgoKBgYCAf4B+f399fX58fH17
        e3t5enp5eXl3eHh3d3aZmZqZmJqXl5mWlpeUlJZ4enxPU1ZCRklJTlFucnWMjY6Njo+MjI2Li42KiouJ
        iYqIiImHhoiGhoeEhYaEg4SDgoSCgYKBgIGAgIB+fn9+fn18fHx7e3x6ent5eXl4eHibmp2amZuZmJqX
        mJpmbXE0ODotLzIYGhsWGRkxNDVNUVWCg4WOjY6MjY2MjI2KiouJiYqIiImHh4iGhoeFhYaEhIWCg4SB
        gYKAgIGAgIB/f39+fn58fX18fHx6enp5eXmcnJ2bmp2amZt7gYUqLi8OEA8XGhoNERAJDAwQERIeISJF
        SkyLi4yNjo6MjI2LjIyKiouJioqJiImHh4iGhoaFhYaEhIWDg4SCgoN4eXt5e32AgIF9fX18fX17e3t6
        enqdnZ+cm56doKNVXF8UFhcWGhoZHR0YGxsWGhoRFBMGCAcYHBxzdXaPj5CNjo+MjI6Mi42KiouJiYuI
        iYmHiIiGhoeFhYaEhIVzdnhTWFtPU1dUWlxrb3F+f398fH17fHyenqCdnZ+Um6BES00aHR4bHR0aHBwY
        GxoYGxoZHBwPEBAHCQlWWVqQkJGOj5COjo+NjY6Mi42KiouJiYuJiYqHh4iHhodzdnc8QkM7PEA5PEAo
        KywlKChNU1V6fH58fH2gn6GeoKOJkpg8QkUREhMGBwYPEQ8YGBgaHBwdHh4WGRcLDQxOUVKSkZKQkJKP
        j5COjo+NjI6MjI2Li4yKiYqIiIqEhodITlAUFhUVFxYfISAFBwYUFxcfICBJT1J/foGgoKKio6eDj5ZC
        SU0kJygEBQQEBAIFBgMKCwkVFRQUFhUWGRhdYGGSk5SRkZORkJGPj5COjpCMjY6LjI2KioyIiYtydnox
        NTYYGhkhJCMhJSUaHx0KDgwNDw8SFRRobXCioaShpquNmKFYYWc5Pj8lKCgHBwYDAwEDBAEBAgAKCwos
        MDB+f4GTlJWSkpOQkJKRkZGQj5GOjpCNjY+MjI2Bg4dCSEwuMjMfICAfISEeIB8fIiIdIiEJCwoJDAxE
        SUuio6aapa2RnKRueH5TWmBITlA6Pj4hIyMWGRgcHx08QUFiZ2mRkpOVlZeTk5SSkpSQkJJYWltXW1t4
        eXuNjY5UWl0gJSUrLi4gICEkJCMjJSMjJSQjJycTFhQQExI9QkObo6mOmKCFkZmCj5dtd31TWl5RWFtS
        WFpYX2Jud3tyfYN8gISXl5mVlpiUlZeUlJVCRUUbIB8ZHR0WGxoqLy8dIyMoLi0wNDQZGRgMDQoVFRIZ
        GBQfHxwWGBYQEhJVWVyRnKR6ho9+ipN7h49/i5N/ipFye4B0foR8hotga3EuNjclKysmLS4rMjJARkU8
        P0AdISEaHx4WGhoVGhkUGRgaHx49REZGTVA6Pj8VFRMLCwgICQYPEA4NDwwyNjZ5e32NmaRnc3t1gYl6
        ho1+i5KGkJeOmaCEjpVKUVUeJSQlKywaHx8MEA8fIyInLSwcISAeIyIcIiEYHRwVGhoUGRgpLy9SW19S
        W19PVlhDSEoqLSwfISAhIyJBREV1eXyFhYeRnqlnc3pjbnRueYB4g4t0f4VkbXI0Oz0YHh0lKyorMDAc
        IiEgJCInKyo5Pj4fIyMbIB8aHx4RFhUNEREUGhg7QkRibHJrdXpfaGxVXF9ZYGRiaW14f4SMkpaOj5GG
        hoebo6t9iJFoc3pcZWlXXWFFSkwvNDUnKytFS0ttd3xPWV1OVllHTlA4Pj5ARkc4Pj0qLi4aHh0QExMO
        EhEZHRxAR0hmcHZ6hYuGkZeIkZiGkJeTm6KPkpWMjI6IiYmHh4ioqKyOmKF8iJFzfoVpcndZYWRNVFZv
        d3ubpq4gJyohJidLUlRNVFcjKSpZY2hMVVhVXmFRWVsuMjISFhUrLy9BR0lueH+AjJKNl52dpq2kqrCQ
        kZKMjI2Li4uJioqJiImrq62mqKyIlJx8iJF4hIt1gId8hYykrreAjJUuNDU7QEJgaW1ncHV1f4NCSk0S
        FhVWYGNnc3hXYGM2OzsrMDBBR0heaGuJkpmdp66doaaPj5COjo+NjY6LjI2KiouJiYusrK+rq62lqKuM
        lZyDjZSHkZmXn6edo6iAhYpnbnNXYWZgaW5ud31ncndPWFtdZ2tpdntmcndga3BZYWVUW11fZ2pnb3SH
        kJWXm5+SkZKQkJKPjpCOjY+NjI6LjI2Li4utrrCsrK+sq62oqayio6ekpamlpqqmpqikpaegoqSFiIqG
        iYuQkZR6goZhbHFlcXdfa3BeaG5ha3B9h42IkpiOlZyVmZyYmZqTk5WSk5SRkZOQkJGPj5GOjpCNjY6L
        jI2urrGurbCsrK+rrK6qqq2pqqyoqKqnp6mmpqmlpKeko6WioaSioaSgn6Gam56VmJuSlpp5goiMlZug
        p62bnZ+Yl5qWl5mWlZiUlJaUlJWSkpSRkZORkJKPkJGOjo+NjY6vr7Kur7GtrrCsra+sq66rqqypqauo
        qKunp6qmpqilpaejo6aio6WioqSgoKKgn6GfnqGdnZ+cnJ6bnJ2ampyZmZuYmJqXl5iWlZiUlZaUk5WS
        k5SSkZOQkZKPj5COjpCwsLOwsLOvr7GurrCtrK+rq66qq62qqayoqKuop6qmpqilpaekpKajo6WhoqSh
        oaOfoKKfnqCenaCdnJ+bm52ampyZmZuYmJqXl5iWlpiVlJeUlJWTkpSRkpOQkJKPkJCxsLOwsLOvsLOu
        r7GtrbCsrLCsq66qq62qqayoqKuop6mmpqilpaekpKajo6WioqSgoaKgn6Kfn6CenaCdnJ6bm52ampyZ
        mZuYmJmXl5iWlpeVlZaUk5WTk5SRkpOQkJKwsLOwsLOxsLOwsLOvr7KurbCtrbCsq6+rq66qqaypqauo
        p6qnp6ilpaekpKajo6WioqShoaOgoKKfn6Genp+dnJ+bm52bm52ZmZuYmJqXl5mWlpiVlZaUlJWSk5WS
        kpOwsbOxsLOwsLOxsLOwsLOvr7GurrGsra+rrK6rq62pqqypqKunp6qmpqilpaikpKajo6WioqShoKOg
        oKKenqGdnqCdnZ+bm56bm5yamZuYmZqYl5mWlpeVlZeUlJWTk5WwsLOwsLOwsbOxsLOwsLOwsLOvr7Ku
        rrGtra+sq66rq62pqa2oqaunp6qmpqmlpaikpKajpKWioqShoaOgoKKfn6GenqCdnZ+cnJ6am52ZmZuY
        mJqXl5mWl5iVlZeUlZUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>